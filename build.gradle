plugins {
    id 'java-platform' // 引入 java-platform插件
    id 'maven-publish' // 发布插件，可用来发布 BOM 或 jar到本地与远程仓库
    id 'org.springframework.boot' version '2.4.7' apply false
}

group = 'com.gzs.learn'
description = 'maven-bom'
version = '1.0.0-SNAPSHOT'

// 默认为防止用户错误地引入依赖，而不是引入依赖约束，如果引入依赖会报错失败。
// 通过这个配置可以让Gradle允许引入依赖，当然这是可选的
javaPlatform {
    allowDependencies()
}

dependencies {
    //在constraints块中定义依赖版本约束
    constraints{
        api "org.springframework.boot:spring-boot-starter-web:$springBootStarterVersion"
        api "org.springframework.boot:spring-boot-starter-aop:$springBootStarterVersion"
        api "org.springframework.boot:spring-boot-autoconfigure:$springBootStarterVersion"
        api "org.springframework.boot:spring-boot-starter-test:$springBootStarterVersion"
        api "org.apache.curator:curator-recipes:$curatorRecipesVersion"
        api "org.apache.zookeeper:zookeeper:$zookeeperVersion"
        api "org.dom4j:dom4j:$dom4jVersion"
        api "org.apache.commons:commons-pool2:$commonsPool2Version"
        api "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:$nacosSpringCloudVersion"
        api "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:$nacosSpringCloudVersion"
        api "org.springframework.cloud:spring-cloud-starter-openfeign:$springCloudStarterOpenfeignVersion"
        api "org.springframework.cloud:spring-cloud-starter-loadbalancer:$springCloudStarterOpenfeignVersion"
        api "org.springframework.cloud:spring-cloud-starter-bootstrap:$springCloudStarterOpenfeignVersion"
        api "org.springframework.boot:spring-boot-starter-actuator:$springBootStarterVersion"
        api "org.apache.tomcat:tomcat-jdbc:$tomcatJdbcVersion"
        api "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"
        api "org.redisson:redisson-spring-boot-starter:$redissonSpringBootStarterVersion"
        api "mysql:mysql-connector-java:$mysqlConnectorJavaVersion"
        api "org.mapstruct:mapstruct:$mapstructProcessorVersion"
        api "org.mapstruct:mapstruct-processor:$mapstructProcessorVersion"
        api "javax.validation:validation-api:$validationApiVersion"
        api "org.flywaydb:flyway-core:$flywayVersion"
        api "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:$springCloudStarterCircuitbreakerResilience4jVersion"
        api "io.github.resilience4j:resilience4j-bulkhead:$resilience4jBulkheadVersion"
        api "org.projectlombok:lombok:$lombokVersion"
        api "org.springframework.boot:spring-boot-starter-test:$springBootStarterVersion"
        api "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        api "org.apache.commons:commons-lang3:$commonsLang3Version"
        api "org.redisson:redisson-spring-boot-starter:$redissonVersion"
    }

}

publishing{
    publications{
        nexus(MavenPublication) {
            //通过java-platform生成BOM
            from components.javaPlatform
        }
    }
    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? aliyunSnapshotUrl : aliyunReleaseUrl
            credentials {
                username = aliyunUser
                password = aliyunPassword
            }
        }
    }
}

//signing {
//    sign publishing.publications.nexus
//}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
